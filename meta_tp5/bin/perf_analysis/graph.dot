digraph {
	graph [fontname=Arial, nodesep=0.125, ranksep=0.25];
	node [fontcolor=white, fontname=Arial, height=0, shape=box, style=filled, width=0];
	edge [fontname=Arial];
	1 [color="#ff0200", fontcolor="#ffffff", fontsize="10.00", label="pso::PSO<meta::MyRnSolution>::run()\n99.79%\n(0.00%)"];
	1 -> 2 [arrowsize="1.00", color="#ff0200", fontcolor="#ff0200", fontsize="10.00", label="99.79%\n100×", labeldistance="3.99", penwidth="3.99"];
	2 [color="#ff0200", fontcolor="#ffffff", fontsize="10.00", label="pso::PSO<meta::MyRnSolution>::step(meta::ASolution*)\n99.79%\n(0.00%)\n100×"];
	2 -> 3 [arrowsize="0.35", color="#0d2179", fontcolor="#0d2179", fontsize="10.00", label="4.60%\n100×", labeldistance="0.50", penwidth="0.50"];
	2 -> 5 [arrowsize="0.98", color="#f83101", fontcolor="#f83101", fontsize="10.00", label="95.18%\n1000×", labeldistance="3.81", penwidth="3.81"];
	3 [color="#fa2401", fontcolor="#ffffff", fontsize="10.00", label="meta::MyRnSolution::fitness()\n96.51%\n(0.00%)\n2100×"];
	3 -> 4 [arrowsize="0.98", color="#f92601", fontcolor="#f92601", fontsize="10.00", label="96.27%\n2110×", labeldistance="3.85", penwidth="3.85"];
	3 -> 15 [arrowsize="0.35", color="#0d0e73", fontcolor="#0d0e73", fontsize="10.00", label="0.24%\n2110×", labeldistance="0.50", penwidth="0.50"];
	4 [color="#f92601", fontcolor="#ffffff", fontsize="10.00", label="nn::MyNeuralNetwork::evalue(Eigen::Matrix<double, -1, 1, 0, -1, 1>)\n96.27%\n(1.04%)\n2110×"];
	4 -> 6 [arrowsize="0.97", color="#f63a01", fontcolor="#f63a01", fontsize="10.00", label="94.18%\n422000×", labeldistance="3.77", penwidth="3.77"];
	4 -> 14 [arrowsize="0.35", color="#0d1174", fontcolor="#0d1174", fontsize="10.00", label="1.04%\n422000×", labeldistance="0.50", penwidth="0.50"];
	5 [color="#f83101", fontcolor="#ffffff", fontsize="10.00", label="pso::Particle<meta::MyRnSolution>::move(meta::MyRnSolution*)\n95.18%\n(0.45%)\n1000×"];
	5 -> 3 [arrowsize="0.96", color="#f35002", fontcolor="#f35002", fontsize="10.00", label="91.91%\n2000×", labeldistance="3.68", penwidth="3.68"];
	5 -> 11 [arrowsize="0.35", color="#0d1676", fontcolor="#0d1676", fontsize="10.00", label="2.24%\n1000×", labeldistance="0.50", penwidth="0.50"];
	5 -> 15 [arrowsize="0.35", color="#0d0e73", fontcolor="#0d0e73", fontsize="10.00", label="0.34%\n3000×", labeldistance="0.50", penwidth="0.50"];
	6 [color="#f63a01", fontcolor="#ffffff", fontsize="10.00", label="nn::NeuralNetwork::evaluate(Eigen::Matrix<double, -1, 1, 0, -1, 1>)\n94.18%\n(2.54%)\n422000×"];
	6 -> 7 [arrowsize="0.91", color="#e4a504", fontcolor="#e4a504", fontsize="10.00", label="82.09%\n844000×", labeldistance="3.28", penwidth="3.28"];
	6 -> 10 [arrowsize="0.35", color="#0d337e", fontcolor="#0d337e", fontsize="10.00", label="8.51%\n422000×", labeldistance="0.50", penwidth="0.50"];
	6 -> 13 [arrowsize="0.35", color="#0d1174", fontcolor="#0d1174", fontsize="10.00", label="1.04%\n844000×", labeldistance="0.50", penwidth="0.50"];
	7 [color="#e4a504", fontcolor="#ffffff", fontsize="10.00", label="Eigen::internal::general_matrix_matrix_product<long, double, 0, false, double, 0, false, 0>::run(long, long, long, double const*, long, double const*, long, double*, long, double, Eigen::internal::level3_blocking<double, double>&, Eigen::internal::GemmParallelInfo<long>*)\n82.09%\n(0.00%)\n844000×"];
	7 -> 8 [arrowsize="0.70", color="#0ab50c", fontcolor="#0ab50c", fontsize="10.00", label="49.70%\n1266000×", labeldistance="1.99", penwidth="1.99"];
	7 -> 9 [arrowsize="0.56", color="#0c9c79", fontcolor="#0c9c79", fontsize="10.00", label="31.04%\n1266000×", labeldistance="1.24", penwidth="1.24"];
	7 -> 12 [arrowsize="0.35", color="#0d1274", fontcolor="#0d1274", fontsize="10.00", label="1.34%\n1266000×", labeldistance="0.50", penwidth="0.50"];
	8 [color="#0ab50c", fontcolor="#ffffff", fontsize="10.00", label="Eigen::internal::gebp_kernel<double, double, long, 4, 4, false, false>::operator()(double*, long, double const*, double const*, long, long, long, double, long, long, long, long, double*) [clone .constprop.116]\n49.70%\n(49.70%)\n1266000×"];
	9 [color="#0c9c79", fontcolor="#ffffff", fontsize="10.00", label="Eigen::internal::gemm_pack_rhs<double, long, 4, 0, false, false>::operator()(double*, double const*, long, long, long, long, long) [clone .constprop.113]\n31.04%\n(31.04%)\n1266000×"];
	10 [color="#0d337e", fontcolor="#ffffff", fontsize="10.00", label="math::sigmoid(Eigen::Matrix<double, -1, 1, 0, -1, 1>)\n8.51%\n(8.51%)\n422000×"];
	11 [color="#0d1676", fontcolor="#ffffff", fontsize="10.00", label="pso::Particle<meta::MyRnSolution>::bounce(Eigen::Matrix<double, -1, 1, 0, -1, 1>)\n2.24%\n(1.79%)\n1000×"];
	12 [color="#0d1274", fontcolor="#ffffff", fontsize="10.00", label="Eigen::internal::gemm_pack_lhs<double, long, 4, 2, 0, false, false>::operator()(double*, double const*, long, long, long, long, long) [clone .constprop.114]\n1.34%\n(1.34%)\n1266000×"];
	13 [color="#0d1174", fontcolor="#ffffff", fontsize="10.00", label="math::sigmoid(Eigen::Matrix<double, -1, -1, 0, -1, -1>)\n1.04%\n(1.04%)\n844000×"];
	14 [color="#0d1174", fontcolor="#ffffff", fontsize="10.00", label="Loader::imgAsVector(unsigned int)\n1.04%\n(1.04%)\n422000×"];
	15 [color="#0d0f74", fontcolor="#ffffff", fontsize="10.00", label="meta::RnSolution::solution()\n0.60%\n(0.60%)\n5319×"];
}
